
groups:
- name: Persistent-Release
  jobs:
  - integration
  - ship-release

jobs:
- name: integration
  serial: true
  plan:
  - aggregate:
    - {trigger: true,         get: emc-persistence-release}
    - {trigger: true,         get: cf-persist-service-broker}
  - task: integration
    docker-image: &docker
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: {{docker_repo}}
          insecure_registries: [{{docker_registry}}]
    config:
      <<: *docker
      inputs:
      - name: emc-persistence-release
      params:
        AWS_ACCESS_KEY: {{aws_access_key}}
        AWS_SECRET_KEY: {{aws_secret_key}}
        BOSH_URI: {{bosh_uri}}
        BOSH_USERNAME: {{bosh_username}}
        BOSH_PASSWORD: {{bosh_password}}
        BROKER_PASSWORD: {{broker_password}}
        BROKER_PLANS: {{broker_plans}}
        BROKER_PORT: {{broker_port}}
        BROKER_SERVICE_NAME: {{broker_service_name}}
        BROKER_SERVICE_UUID: {{broker_service_uuid}}
        BROKER_USERNAME: {{broker_username}}
        CF_DOMAIN: {{cf_domain}}
        CF_PASSWORD: {{cf_password}}
        CF_USERNAME: {{cf_username}}
        DIEGO_DRIVER_NAME: {{diego_driver_name}}
        LIBSTORAGE_URI: {{libstorage_uri}}
        STATIC_IP: {{static_ip}}
      run:
        path: emc-persistence-release/ci/tasks/deploy-persist-release

- name: ship-release
  serial: true
  plan:
  - aggregate:
    - {trigger: true,         get: emc-persistence-release,  passed: [integration]}
    - {trigger: false,        get: persistence-release-version, params: {bump: major}}
  - task: ship-release
    docker-image: &docker
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: {{docker_repo}}
          insecure_registries: [{{docker_registry}}]
    config:
      <<: *docker
      inputs:
      - name: emc-persistence-release
      - name: persistence-release-version
      outputs:
      - name: promote
      params:
        AWS_ACCESS_KEY: {{aws_access_key}}
        AWS_SECRET_KEY: {{aws_secret_key}}
        GITHUB_USER:              {{github_user}}
        GITHUB_EMAIL:             {{github_email}}
        VERSION_FILE:             persistence-release-version/number
      run:
        path: emc-persistence-release/ci/tasks/ship-release
  - put: final-release
    params: {file: promote/emc-persistence-release-*.tgz}
  - put: emc-persistence-release
    params: {repository: promote/emc-persistence-release, rebase: true, tag_prefix: "v", tag: promote/integer_version}

resources:
- name: emc-persistence-release
  type: git
  source: &github-secrets
    uri: https://github.com/EMC-CMD/emc-persistence-release
    branch: master
    username: {{github_user}}
    password: {{github_password}}
    skip_ssl_verification: true

- name: persistence-release-version
  type: semver
  source:
    <<: *github-secrets
    driver: git
    file: ci/version

- name: cf-persist-service-broker
  type: git
  source:
    uri: https://github.com/EMC-Dojo/cf-persist-service-broker
    branch: master
    skip_ssl_verification: true

- name: final-release
  type: s3
  source:
    bucket: emc-persistence-release
    regexp: emc-persistence-release-(.*).tgz
    access_key_id: {{aws_access_key}}
    secret_access_key: {{aws_secret_key}}
